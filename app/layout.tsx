import type { Metadata } from 'next'
import { Geist, Geist_Mono } from 'next/font/google'
import './globals.css'
import OCConnectWrapper from '@/provider/OCConnectWrapper'
import { AuthProvider } from '@/components/AuthProvider'
import { ProposalProvider } from '@/components/ProposalContext'

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin']
})

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin']
})

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app'
}

const opts = {
  redirectUri: 'http://localhost:3000/redirect'
}

export default function RootLayout({
  children
}: Readonly<{
  children: React.ReactNode
}>) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <AuthProvider>
          <ProposalProvider>
            <OCConnectWrapper sandboxMode={true}>{children}</OCConnectWrapper>
          </ProposalProvider>
        </AuthProvider>
      </body>
    </html>
  )
}
